.tab-selected {
    color: var(--ion-color-primary);
    font-weight: bold;
    transition: color 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
  
  .tab-selected ion-icon {
    color: var(--ion-color-primary);
    transform: scale(1.1);
    transition: color 0.3s ease, transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
  
  /* Tab indicator with animation */
  .tab-selected::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 25%;
    width: 50%;
    height: 3px;
    background-color: var(--ion-color-primary);
    border-radius: 3px 3px 0 0;
    transform-origin: center;
    animation: tabIndicator 0.4s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  }

@keyframes tabIndicator {
  0% {
    transform: scaleX(0);
    opacity: 0;
  }
  100% {
    transform: scaleX(1);
    opacity: 1;
  }
}

/* Enhanced animations for the Aktivitas page */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scaleIn {
  0% {
    opacity: 0;
    transform: scale(0.9);
  }
  70% {
    opacity: 1;
    transform: scale(1.03);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes slideInRight {
  0% {
    opacity: 0;
    transform: translateX(30px);
  }
  70% {
    opacity: 1;
    transform: translateX(-5px);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

/* Apply animations to elements */
ion-content {
  --background: transparent;
}

/* Header animation with subtle bounce */
div.px-4 {
  animation: fadeInUp 0.6s cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

/* Service cards animation with staggered delay and elastic effect */
.grid-cols-2 > div {
  animation: scaleIn 0.7s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  opacity: 0;
  transform-origin: center bottom;
}

.grid-cols-2 > div:nth-child(1) {
  animation-delay: 0.1s;
}

.grid-cols-2 > div:nth-child(2) {
  animation-delay: 0.25s;
}

.grid-cols-2 > div:nth-child(3) {
  animation-delay: 0.4s;
}

.grid-cols-2 > div:nth-child(4) {
  animation-delay: 0.55s;
}

/* Activity list animation with cascade effect */
ion-list {
  animation: fadeInUp 0.7s cubic-bezier(0.22, 1, 0.36, 1) forwards;
  animation-delay: 0.6s;
  opacity: 0;
}

ion-list ion-item {
  animation: slideInRight 0.5s cubic-bezier(0.22, 1, 0.36, 1) forwards;
  opacity: 0;
}

ion-list ion-item:nth-child(1) { animation-delay: 0.7s; }
ion-list ion-item:nth-child(2) { animation-delay: 0.8s; }
ion-list ion-item:nth-child(3) { animation-delay: 0.9s; }
ion-list ion-item:nth-child(4) { animation-delay: 1.0s; }
ion-list ion-item:nth-child(5) { animation-delay: 1.1s; }

.rounded-xl {
  transition: all 0.4s cubic-bezier(0.22, 1, 0.36, 1);
  position: relative;
  overflow: hidden;
}

.rounded-xl:hover {
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.15), 0 8px 10px -6px rgba(0, 0, 0, 0.1);
  transform: translateY(-3px);
}

.rounded-xl:active {
  transform: translateY(0px);
  transition: all 0.1s ease;
}

/* Interactive card effect */
.rounded-xl::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: 0.5s;
}

.rounded-xl:hover::after {
  left: 100%;
  transition: 0.5s;
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .grid-cols-2 > div {
    animation-duration: 0.5s;
  }
}

@media (min-width: 641px) {
  .grid-cols-2 > div:hover {
    transform: translateY(-5px) scale(1.03);
    transition: transform 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
  }
}   

/* Refresher styling with enhanced animations */
ion-refresher {
  z-index: 1;
}

/* Custom refresher animation */
@keyframes refreshPulse {
  0% {
    transform: scale(1) rotate(0deg);
    opacity: 0.7;
  }
  50% {
    transform: scale(1.2) rotate(180deg);
    opacity: 1;
  }
  100% {
    transform: scale(1) rotate(360deg);
    opacity: 0.7;
  }
}

@keyframes refreshRotate {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg) scale(1.1);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Pulling indicator styles */
ion-refresher-content .refresher-pulling-icon {
  color: #BB3E00;
  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  animation: refreshPulse 2s infinite cubic-bezier(0.22, 1, 0.36, 1);
}

/* Pulling text styles with animated gradient */
ion-refresher-content .refresher-pulling-text {
  font-size: 14px;
  font-weight: 500;
  color: #BB3E00;
  opacity: 0.9;
  background: linear-gradient(90deg, #BB3E00, #FF8C5A, #BB3E00);
  background-size: 200% auto;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: shimmer 2s linear infinite;
}

/* Refreshing spinner styles */
ion-refresher-content .refresher-refreshing-icon {
  color: #BB3E00;
  animation: refreshRotate 1.5s cubic-bezier(0.22, 1, 0.36, 1) infinite;
}

/* Spinner color override - More specific selectors to ensure color change */
ion-refresher-content ion-spinner {
  --spinner-color: #BB3E00 !important;
  width: 28px;
  height: 28px;
  filter: drop-shadow(0 0 3px rgba(187, 62, 0, 0.3));
}

/* Target the circles spinner specifically */
ion-refresher-content ion-spinner.spinner-circles circle {
  fill: #BB3E00 !important;
  stroke: #BB3E00 !important;
  animation: refreshPulse 2s infinite;
}

/* Force the spinner color with higher specificity */
:host ::ng-deep ion-refresher-content ion-spinner {
  --spinner-color: #BB3E00 !important;
  color: #BB3E00 !important;
}

:host ::ng-deep ion-refresher-content ion-spinner * {
  stroke: #BB3E00 !important;
  fill: #BB3E00 !important;
}

/* Refreshing text styles */
ion-refresher-content .refresher-refreshing-text {
  font-size: 14px;
  font-weight: 500;
  color: #BB3E00;
  opacity: 0.9;
  animation: fadeInUp 0.5s ease forwards;
}

/* Subtle refresh background with animated gradient */
ion-refresher::part(scroll) {
  background: linear-gradient(120deg, rgba(255, 240, 230, 0.1), rgba(255, 240, 230, 0.2), rgba(255, 240, 230, 0.1));
  background-size: 200% 200%;
  animation: shimmer 3s ease infinite;
}

/* Dark mode adjustments */
.dark ion-refresher-content .refresher-pulling-text,
.dark ion-refresher-content .refresher-refreshing-text,
.dark ion-refresher-content .refresher-pulling-icon,
.dark ion-refresher-content .refresher-refreshing-icon {
  color: #FF8C5A;
}

.dark ion-refresher-content .refresher-pulling-text {
  background: linear-gradient(90deg, #FF8C5A, #FFB38A, #FF8C5A);
  background-size: 200% auto;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.dark ion-refresher-content ion-spinner {
  --spinner-color: #FF8C5A !important;
  color: #FF8C5A !important;
  filter: drop-shadow(0 0 3px rgba(255, 140, 90, 0.3));
}

.dark ion-refresher-content ion-spinner.spinner-circles circle {
  fill: #FF8C5A !important;
  stroke: #FF8C5A !important;
}

.dark :host ::ng-deep ion-refresher-content ion-spinner {
  --spinner-color: #FF8C5A !important;
  color: #FF8C5A !important;
}

.dark :host ::ng-deep ion-refresher-content ion-spinner * {
  stroke: #FF8C5A !important;
  fill: #FF8C5A !important;
}

/* Refresher complete animation with elastic effect */
@keyframes refreshComplete {
  0% {
    transform: scale(0) rotate(0deg);
    opacity: 0;
  }
  60% {
    transform: scale(1.3) rotate(180deg);
    opacity: 1;
  }
  100% {
    transform: scale(1) rotate(360deg);
    opacity: 1;
  }
}

ion-refresher.refresher-completing ion-spinner {
  animation: refreshComplete 0.6s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
}

/* Page transition animations */
:host(.ion-page-invisible) {
  opacity: 0;
}

:host(.ion-page-visible) {
  animation: pageTransition 0.5s cubic-bezier(0.22, 1, 0.36, 1) forwards;
}

@keyframes pageTransition {
  0% {
    opacity: 0;
    transform: translateY(10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
